"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/mockData.ts":
/*!*******************************!*\
  !*** ./src/utils/mockData.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateDashboardMetrics: () => (/* binding */ calculateDashboardMetrics),\n/* harmony export */   formatCurrency: () => (/* binding */ formatCurrency),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatPercentage: () => (/* binding */ formatPercentage),\n/* harmony export */   generatePropertyFinancials: () => (/* binding */ generatePropertyFinancials)\n/* harmony export */ });\n// mockProperties, mockTransactions, mockAccounts の定義を削除\nconst generatePropertyFinancials = (property, transactions)=>{\n    const propertyTransactions = transactions.filter((t)=>t.property_id === property.id);\n    const monthly_income = propertyTransactions.filter((t)=>t.type === 'income').reduce((sum, t)=>sum + t.amount, 0);\n    const monthly_expenses = propertyTransactions.filter((t)=>t.type === 'expense').reduce((sum, t)=>sum + t.amount, 0);\n    const annual_income = monthly_income * 12;\n    const annual_expenses = monthly_expenses * 12;\n    const net_profit = annual_income - annual_expenses;\n    const roi = property.purchase_price ? net_profit / property.purchase_price * 100 : 0;\n    const occupancy_rate = 95; // Mock data\n    // 追加の計算\n    const cash_flow = monthly_income - monthly_expenses;\n    const cap_rate = property.purchase_price ? annual_income / property.purchase_price * 100 : 0;\n    const appreciation_rate = 2.5; // 年2.5%の価格上昇を想定\n    return {\n        property,\n        monthly_income,\n        monthly_expenses,\n        annual_income,\n        annual_expenses,\n        net_profit,\n        roi,\n        occupancy_rate,\n        cash_flow,\n        cap_rate,\n        appreciation_rate\n    };\n};\n// ダッシュボードメトリクスの計算\nconst calculateDashboardMetrics = (properties, transactions)=>{\n    const propertyFinancials = properties.map((property)=>generatePropertyFinancials(property, transactions));\n    const total_properties = properties.length;\n    const total_monthly_income = propertyFinancials.reduce((sum, pf)=>sum + pf.monthly_income, 0);\n    const total_monthly_expenses = propertyFinancials.reduce((sum, pf)=>sum + pf.monthly_expenses, 0);\n    const total_net_profit = total_monthly_income - total_monthly_expenses;\n    const average_roi = propertyFinancials.length > 0 ? propertyFinancials.reduce((sum, pf)=>sum + pf.roi, 0) / propertyFinancials.length : 0;\n    const total_portfolio_value = properties.reduce((sum, p)=>sum + (p.purchase_price || 0), 0);\n    const monthly_cash_flow = total_net_profit;\n    return {\n        total_properties,\n        total_monthly_income,\n        total_monthly_expenses,\n        total_net_profit,\n        average_roi,\n        total_portfolio_value,\n        monthly_cash_flow\n    };\n};\n// 通貨フォーマット関数\nconst formatCurrency = (amount)=>{\n    return new Intl.NumberFormat('ja-JP', {\n        style: 'currency',\n        currency: 'JPY',\n        minimumFractionDigits: 0\n    }).format(amount);\n};\n// 日付フォーマット関数\nconst formatDate = (dateString)=>{\n    return new Date(dateString).toLocaleDateString('ja-JP');\n};\n// パーセンテージフォーマット関数\nconst formatPercentage = function(value) {\n    let decimals = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n    return \"\".concat(value.toFixed(decimals), \"%\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9tb2NrRGF0YS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVBLHdEQUF3RDtBQUVqRCxNQUFNQSw2QkFBNkIsQ0FBQ0MsVUFBb0JDO0lBQzdELE1BQU1DLHVCQUF1QkQsYUFBYUUsTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxXQUFXLEtBQUtMLFNBQVNNLEVBQUU7SUFFbkYsTUFBTUMsaUJBQWlCTCxxQkFDcEJDLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUksSUFBSSxLQUFLLFVBQ3ZCQyxNQUFNLENBQUMsQ0FBQ0MsS0FBS04sSUFBTU0sTUFBTU4sRUFBRU8sTUFBTSxFQUFFO0lBRXRDLE1BQU1DLG1CQUFtQlYscUJBQ3RCQyxNQUFNLENBQUNDLENBQUFBLElBQUtBLEVBQUVJLElBQUksS0FBSyxXQUN2QkMsTUFBTSxDQUFDLENBQUNDLEtBQUtOLElBQU1NLE1BQU1OLEVBQUVPLE1BQU0sRUFBRTtJQUV0QyxNQUFNRSxnQkFBZ0JOLGlCQUFpQjtJQUN2QyxNQUFNTyxrQkFBa0JGLG1CQUFtQjtJQUMzQyxNQUFNRyxhQUFhRixnQkFBZ0JDO0lBQ25DLE1BQU1FLE1BQU1oQixTQUFTaUIsY0FBYyxHQUFHLGFBQWNqQixTQUFTaUIsY0FBYyxHQUFJLE1BQU07SUFDckYsTUFBTUMsaUJBQWlCLElBQUksWUFBWTtJQUV2QyxRQUFRO0lBQ1IsTUFBTUMsWUFBWVosaUJBQWlCSztJQUNuQyxNQUFNUSxXQUFXcEIsU0FBU2lCLGNBQWMsR0FBRyxnQkFBaUJqQixTQUFTaUIsY0FBYyxHQUFJLE1BQU07SUFDN0YsTUFBTUksb0JBQW9CLEtBQUssZ0JBQWdCO0lBRS9DLE9BQU87UUFDTHJCO1FBQ0FPO1FBQ0FLO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FFO1FBQ0FDO1FBQ0FDO1FBQ0FDO0lBQ0Y7QUFDRixFQUFFO0FBRUYsa0JBQWtCO0FBQ1gsTUFBTUMsNEJBQTRCLENBQUNDLFlBQXdCdEI7SUFDaEUsTUFBTXVCLHFCQUFxQkQsV0FBV0UsR0FBRyxDQUFDekIsQ0FBQUEsV0FBWUQsMkJBQTJCQyxVQUFVQztJQUUzRixNQUFNeUIsbUJBQW1CSCxXQUFXSSxNQUFNO0lBQzFDLE1BQU1DLHVCQUF1QkosbUJBQW1CZixNQUFNLENBQUMsQ0FBQ0MsS0FBS21CLEtBQU9uQixNQUFNbUIsR0FBR3RCLGNBQWMsRUFBRTtJQUM3RixNQUFNdUIseUJBQXlCTixtQkFBbUJmLE1BQU0sQ0FBQyxDQUFDQyxLQUFLbUIsS0FBT25CLE1BQU1tQixHQUFHakIsZ0JBQWdCLEVBQUU7SUFDakcsTUFBTW1CLG1CQUFtQkgsdUJBQXVCRTtJQUNoRCxNQUFNRSxjQUFjUixtQkFBbUJHLE1BQU0sR0FBRyxJQUFJSCxtQkFBbUJmLE1BQU0sQ0FBQyxDQUFDQyxLQUFLbUIsS0FBT25CLE1BQU1tQixHQUFHYixHQUFHLEVBQUUsS0FBS1EsbUJBQW1CRyxNQUFNLEdBQUc7SUFDMUksTUFBTU0sd0JBQXdCVixXQUFXZCxNQUFNLENBQUMsQ0FBQ0MsS0FBS3dCLElBQU14QixNQUFPd0IsQ0FBQUEsRUFBRWpCLGNBQWMsSUFBSSxJQUFJO0lBQzNGLE1BQU1rQixvQkFBb0JKO0lBRTFCLE9BQU87UUFDTEw7UUFDQUU7UUFDQUU7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUU7SUFDRjtBQUNGLEVBQUU7QUFFRixhQUFhO0FBQ04sTUFBTUMsaUJBQWlCLENBQUN6QjtJQUM3QixPQUFPLElBQUkwQixLQUFLQyxZQUFZLENBQUMsU0FBUztRQUNwQ0MsT0FBTztRQUNQQyxVQUFVO1FBQ1ZDLHVCQUF1QjtJQUN6QixHQUFHQyxNQUFNLENBQUMvQjtBQUNaLEVBQUU7QUFFRixhQUFhO0FBQ04sTUFBTWdDLGFBQWEsQ0FBQ0M7SUFDekIsT0FBTyxJQUFJQyxLQUFLRCxZQUFZRSxrQkFBa0IsQ0FBQztBQUNqRCxFQUFFO0FBRUYsa0JBQWtCO0FBQ1gsTUFBTUMsbUJBQW1CLFNBQUNDO1FBQWVDLDRFQUFtQjtJQUNqRSxPQUFPLEdBQTJCLE9BQXhCRCxNQUFNRSxPQUFPLENBQUNELFdBQVU7QUFDcEMsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL3J5b21hdGFrYWhhc2hpL2FwcDAxLTIvc3JjL3V0aWxzL21vY2tEYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3BlcnR5LCBUcmFuc2FjdGlvbiwgQUlSZWNvbW1lbmRhdGlvbiwgUHJvcGVydHlGaW5hbmNpYWxzLCBEYXNoYm9hcmRNZXRyaWNzLCBBY2NvdW50IH0gZnJvbSAnLi4vdHlwZXMnO1xuXG4vLyBtb2NrUHJvcGVydGllcywgbW9ja1RyYW5zYWN0aW9ucywgbW9ja0FjY291bnRzIOOBruWumue+qeOCkuWJiumZpFxuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVQcm9wZXJ0eUZpbmFuY2lhbHMgPSAocHJvcGVydHk6IFByb3BlcnR5LCB0cmFuc2FjdGlvbnM6IFRyYW5zYWN0aW9uW10pOiBQcm9wZXJ0eUZpbmFuY2lhbHMgPT4ge1xuICBjb25zdCBwcm9wZXJ0eVRyYW5zYWN0aW9ucyA9IHRyYW5zYWN0aW9ucy5maWx0ZXIodCA9PiB0LnByb3BlcnR5X2lkID09PSBwcm9wZXJ0eS5pZCk7XG4gIFxuICBjb25zdCBtb250aGx5X2luY29tZSA9IHByb3BlcnR5VHJhbnNhY3Rpb25zXG4gICAgLmZpbHRlcih0ID0+IHQudHlwZSA9PT0gJ2luY29tZScpXG4gICAgLnJlZHVjZSgoc3VtLCB0KSA9PiBzdW0gKyB0LmFtb3VudCwgMCk7XG4gIFxuICBjb25zdCBtb250aGx5X2V4cGVuc2VzID0gcHJvcGVydHlUcmFuc2FjdGlvbnNcbiAgICAuZmlsdGVyKHQgPT4gdC50eXBlID09PSAnZXhwZW5zZScpXG4gICAgLnJlZHVjZSgoc3VtLCB0KSA9PiBzdW0gKyB0LmFtb3VudCwgMCk7XG4gIFxuICBjb25zdCBhbm51YWxfaW5jb21lID0gbW9udGhseV9pbmNvbWUgKiAxMjtcbiAgY29uc3QgYW5udWFsX2V4cGVuc2VzID0gbW9udGhseV9leHBlbnNlcyAqIDEyO1xuICBjb25zdCBuZXRfcHJvZml0ID0gYW5udWFsX2luY29tZSAtIGFubnVhbF9leHBlbnNlcztcbiAgY29uc3Qgcm9pID0gcHJvcGVydHkucHVyY2hhc2VfcHJpY2UgPyAobmV0X3Byb2ZpdCAvIHByb3BlcnR5LnB1cmNoYXNlX3ByaWNlKSAqIDEwMCA6IDA7XG4gIGNvbnN0IG9jY3VwYW5jeV9yYXRlID0gOTU7IC8vIE1vY2sgZGF0YVxuXG4gIC8vIOi/veWKoOOBruioiOeul1xuICBjb25zdCBjYXNoX2Zsb3cgPSBtb250aGx5X2luY29tZSAtIG1vbnRobHlfZXhwZW5zZXM7XG4gIGNvbnN0IGNhcF9yYXRlID0gcHJvcGVydHkucHVyY2hhc2VfcHJpY2UgPyAoYW5udWFsX2luY29tZSAvIHByb3BlcnR5LnB1cmNoYXNlX3ByaWNlKSAqIDEwMCA6IDA7XG4gIGNvbnN0IGFwcHJlY2lhdGlvbl9yYXRlID0gMi41OyAvLyDlubQyLjUl44Gu5L6h5qC85LiK5piH44KS5oOz5a6aXG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wZXJ0eSxcbiAgICBtb250aGx5X2luY29tZSxcbiAgICBtb250aGx5X2V4cGVuc2VzLFxuICAgIGFubnVhbF9pbmNvbWUsXG4gICAgYW5udWFsX2V4cGVuc2VzLFxuICAgIG5ldF9wcm9maXQsXG4gICAgcm9pLFxuICAgIG9jY3VwYW5jeV9yYXRlLFxuICAgIGNhc2hfZmxvdyxcbiAgICBjYXBfcmF0ZSxcbiAgICBhcHByZWNpYXRpb25fcmF0ZVxuICB9O1xufTtcblxuLy8g44OA44OD44K344Ol44Oc44O844OJ44Oh44OI44Oq44Kv44K544Gu6KiI566XXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlRGFzaGJvYXJkTWV0cmljcyA9IChwcm9wZXJ0aWVzOiBQcm9wZXJ0eVtdLCB0cmFuc2FjdGlvbnM6IFRyYW5zYWN0aW9uW10pOiBEYXNoYm9hcmRNZXRyaWNzID0+IHtcbiAgY29uc3QgcHJvcGVydHlGaW5hbmNpYWxzID0gcHJvcGVydGllcy5tYXAocHJvcGVydHkgPT4gZ2VuZXJhdGVQcm9wZXJ0eUZpbmFuY2lhbHMocHJvcGVydHksIHRyYW5zYWN0aW9ucykpO1xuICBcbiAgY29uc3QgdG90YWxfcHJvcGVydGllcyA9IHByb3BlcnRpZXMubGVuZ3RoO1xuICBjb25zdCB0b3RhbF9tb250aGx5X2luY29tZSA9IHByb3BlcnR5RmluYW5jaWFscy5yZWR1Y2UoKHN1bSwgcGYpID0+IHN1bSArIHBmLm1vbnRobHlfaW5jb21lLCAwKTtcbiAgY29uc3QgdG90YWxfbW9udGhseV9leHBlbnNlcyA9IHByb3BlcnR5RmluYW5jaWFscy5yZWR1Y2UoKHN1bSwgcGYpID0+IHN1bSArIHBmLm1vbnRobHlfZXhwZW5zZXMsIDApO1xuICBjb25zdCB0b3RhbF9uZXRfcHJvZml0ID0gdG90YWxfbW9udGhseV9pbmNvbWUgLSB0b3RhbF9tb250aGx5X2V4cGVuc2VzO1xuICBjb25zdCBhdmVyYWdlX3JvaSA9IHByb3BlcnR5RmluYW5jaWFscy5sZW5ndGggPiAwID8gcHJvcGVydHlGaW5hbmNpYWxzLnJlZHVjZSgoc3VtLCBwZikgPT4gc3VtICsgcGYucm9pLCAwKSAvIHByb3BlcnR5RmluYW5jaWFscy5sZW5ndGggOiAwO1xuICBjb25zdCB0b3RhbF9wb3J0Zm9saW9fdmFsdWUgPSBwcm9wZXJ0aWVzLnJlZHVjZSgoc3VtLCBwKSA9PiBzdW0gKyAocC5wdXJjaGFzZV9wcmljZSB8fCAwKSwgMCk7XG4gIGNvbnN0IG1vbnRobHlfY2FzaF9mbG93ID0gdG90YWxfbmV0X3Byb2ZpdDtcblxuICByZXR1cm4ge1xuICAgIHRvdGFsX3Byb3BlcnRpZXMsXG4gICAgdG90YWxfbW9udGhseV9pbmNvbWUsXG4gICAgdG90YWxfbW9udGhseV9leHBlbnNlcyxcbiAgICB0b3RhbF9uZXRfcHJvZml0LFxuICAgIGF2ZXJhZ2Vfcm9pLFxuICAgIHRvdGFsX3BvcnRmb2xpb192YWx1ZSxcbiAgICBtb250aGx5X2Nhc2hfZmxvd1xuICB9O1xufTtcblxuLy8g6YCa6LKo44OV44Kp44O844Oe44OD44OI6Zai5pWwXG5leHBvcnQgY29uc3QgZm9ybWF0Q3VycmVuY3kgPSAoYW1vdW50OiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gbmV3IEludGwuTnVtYmVyRm9ybWF0KCdqYS1KUCcsIHtcbiAgICBzdHlsZTogJ2N1cnJlbmN5JyxcbiAgICBjdXJyZW5jeTogJ0pQWScsXG4gICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAwXG4gIH0pLmZvcm1hdChhbW91bnQpO1xufTtcblxuLy8g5pel5LuY44OV44Kp44O844Oe44OD44OI6Zai5pWwXG5leHBvcnQgY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlU3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gbmV3IERhdGUoZGF0ZVN0cmluZykudG9Mb2NhbGVEYXRlU3RyaW5nKCdqYS1KUCcpO1xufTtcblxuLy8g44OR44O844K744Oz44OG44O844K444OV44Kp44O844Oe44OD44OI6Zai5pWwXG5leHBvcnQgY29uc3QgZm9ybWF0UGVyY2VudGFnZSA9ICh2YWx1ZTogbnVtYmVyLCBkZWNpbWFsczogbnVtYmVyID0gMSk6IHN0cmluZyA9PiB7XG4gIHJldHVybiBgJHt2YWx1ZS50b0ZpeGVkKGRlY2ltYWxzKX0lYDtcbn07Il0sIm5hbWVzIjpbImdlbmVyYXRlUHJvcGVydHlGaW5hbmNpYWxzIiwicHJvcGVydHkiLCJ0cmFuc2FjdGlvbnMiLCJwcm9wZXJ0eVRyYW5zYWN0aW9ucyIsImZpbHRlciIsInQiLCJwcm9wZXJ0eV9pZCIsImlkIiwibW9udGhseV9pbmNvbWUiLCJ0eXBlIiwicmVkdWNlIiwic3VtIiwiYW1vdW50IiwibW9udGhseV9leHBlbnNlcyIsImFubnVhbF9pbmNvbWUiLCJhbm51YWxfZXhwZW5zZXMiLCJuZXRfcHJvZml0Iiwicm9pIiwicHVyY2hhc2VfcHJpY2UiLCJvY2N1cGFuY3lfcmF0ZSIsImNhc2hfZmxvdyIsImNhcF9yYXRlIiwiYXBwcmVjaWF0aW9uX3JhdGUiLCJjYWxjdWxhdGVEYXNoYm9hcmRNZXRyaWNzIiwicHJvcGVydGllcyIsInByb3BlcnR5RmluYW5jaWFscyIsIm1hcCIsInRvdGFsX3Byb3BlcnRpZXMiLCJsZW5ndGgiLCJ0b3RhbF9tb250aGx5X2luY29tZSIsInBmIiwidG90YWxfbW9udGhseV9leHBlbnNlcyIsInRvdGFsX25ldF9wcm9maXQiLCJhdmVyYWdlX3JvaSIsInRvdGFsX3BvcnRmb2xpb192YWx1ZSIsInAiLCJtb250aGx5X2Nhc2hfZmxvdyIsImZvcm1hdEN1cnJlbmN5IiwiSW50bCIsIk51bWJlckZvcm1hdCIsInN0eWxlIiwiY3VycmVuY3kiLCJtaW5pbXVtRnJhY3Rpb25EaWdpdHMiLCJmb3JtYXQiLCJmb3JtYXREYXRlIiwiZGF0ZVN0cmluZyIsIkRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJmb3JtYXRQZXJjZW50YWdlIiwidmFsdWUiLCJkZWNpbWFscyIsInRvRml4ZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/mockData.ts\n"));

/***/ })

});