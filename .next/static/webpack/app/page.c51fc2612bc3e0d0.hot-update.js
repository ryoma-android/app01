"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/mockData.ts":
/*!*******************************!*\
  !*** ./src/utils/mockData.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateDashboardMetrics: () => (/* binding */ calculateDashboardMetrics),\n/* harmony export */   formatCurrency: () => (/* binding */ formatCurrency),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatPercentage: () => (/* binding */ formatPercentage),\n/* harmony export */   generatePropertyFinancials: () => (/* binding */ generatePropertyFinancials)\n/* harmony export */ });\nconst generatePropertyFinancials = (property, transactions)=>{\n    const propertyTransactions = transactions.filter((t)=>t.property_id === property.id);\n    const monthly_income = propertyTransactions.filter((t)=>t.type === 'income').reduce((sum, t)=>sum + t.amount, 0);\n    const monthly_expenses = propertyTransactions.filter((t)=>t.type === 'expense').reduce((sum, t)=>sum + t.amount, 0);\n    const annual_income = monthly_income * 12;\n    const annual_expenses = monthly_expenses * 12;\n    const net_profit = annual_income - annual_expenses;\n    const roi = property.purchase_price ? net_profit / property.purchase_price * 100 : 0;\n    const occupancy_rate = 95; // Mock data\n    // 追加の計算\n    const cash_flow = monthly_income - monthly_expenses;\n    const cap_rate = property.purchase_price ? annual_income / property.purchase_price * 100 : 0;\n    const appreciation_rate = 2.5; // 年2.5%の価格上昇を想定\n    return {\n        property,\n        monthly_income,\n        monthly_expenses,\n        annual_income,\n        annual_expenses,\n        net_profit,\n        roi,\n        occupancy_rate,\n        cash_flow,\n        cap_rate,\n        appreciation_rate\n    };\n};\n// ダッシュボードメトリクスの計算\nconst calculateDashboardMetrics = (properties, transactions)=>{\n    const propertyFinancials = properties.map((property)=>generatePropertyFinancials(property, transactions));\n    const total_properties = properties.length;\n    const total_monthly_income = propertyFinancials.reduce((sum, pf)=>sum + pf.monthly_income, 0);\n    const total_monthly_expenses = propertyFinancials.reduce((sum, pf)=>sum + pf.monthly_expenses, 0);\n    const total_net_profit = total_monthly_income - total_monthly_expenses;\n    const average_roi = propertyFinancials.length > 0 ? propertyFinancials.reduce((sum, pf)=>sum + pf.roi, 0) / propertyFinancials.length : 0;\n    const total_portfolio_value = properties.reduce((sum, p)=>sum + (p.purchase_price || 0), 0);\n    const monthly_cash_flow = total_net_profit;\n    return {\n        total_properties,\n        total_monthly_income,\n        total_monthly_expenses,\n        total_net_profit,\n        average_roi,\n        total_portfolio_value,\n        monthly_cash_flow\n    };\n};\n// 通貨フォーマット関数\nconst formatCurrency = (amount)=>{\n    return new Intl.NumberFormat('ja-JP', {\n        style: 'currency',\n        currency: 'JPY',\n        minimumFractionDigits: 0\n    }).format(amount);\n};\n// 日付フォーマット関数\nconst formatDate = (dateString)=>{\n    return new Date(dateString).toLocaleDateString('ja-JP');\n};\n// パーセンテージフォーマット関数\nconst formatPercentage = function(value) {\n    let decimals = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n    return \"\".concat(value.toFixed(decimals), \"%\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9tb2NrRGF0YS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVPLE1BQU1BLDZCQUE2QixDQUFDQyxVQUFvQkM7SUFDN0QsTUFBTUMsdUJBQXVCRCxhQUFhRSxNQUFNLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLFdBQVcsS0FBS0wsU0FBU00sRUFBRTtJQUVuRixNQUFNQyxpQkFBaUJMLHFCQUNwQkMsTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFSSxJQUFJLEtBQUssVUFDdkJDLE1BQU0sQ0FBQyxDQUFDQyxLQUFLTixJQUFNTSxNQUFNTixFQUFFTyxNQUFNLEVBQUU7SUFFdEMsTUFBTUMsbUJBQW1CVixxQkFDdEJDLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUksSUFBSSxLQUFLLFdBQ3ZCQyxNQUFNLENBQUMsQ0FBQ0MsS0FBS04sSUFBTU0sTUFBTU4sRUFBRU8sTUFBTSxFQUFFO0lBRXRDLE1BQU1FLGdCQUFnQk4saUJBQWlCO0lBQ3ZDLE1BQU1PLGtCQUFrQkYsbUJBQW1CO0lBQzNDLE1BQU1HLGFBQWFGLGdCQUFnQkM7SUFDbkMsTUFBTUUsTUFBTWhCLFNBQVNpQixjQUFjLEdBQUcsYUFBY2pCLFNBQVNpQixjQUFjLEdBQUksTUFBTTtJQUNyRixNQUFNQyxpQkFBaUIsSUFBSSxZQUFZO0lBRXZDLFFBQVE7SUFDUixNQUFNQyxZQUFZWixpQkFBaUJLO0lBQ25DLE1BQU1RLFdBQVdwQixTQUFTaUIsY0FBYyxHQUFHLGdCQUFpQmpCLFNBQVNpQixjQUFjLEdBQUksTUFBTTtJQUM3RixNQUFNSSxvQkFBb0IsS0FBSyxnQkFBZ0I7SUFFL0MsT0FBTztRQUNMckI7UUFDQU87UUFDQUs7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUU7UUFDQUM7UUFDQUM7UUFDQUM7SUFDRjtBQUNGLEVBQUU7QUFFRixrQkFBa0I7QUFDWCxNQUFNQyw0QkFBNEIsQ0FBQ0MsWUFBd0J0QjtJQUNoRSxNQUFNdUIscUJBQXFCRCxXQUFXRSxHQUFHLENBQUN6QixDQUFBQSxXQUFZRCwyQkFBMkJDLFVBQVVDO0lBRTNGLE1BQU15QixtQkFBbUJILFdBQVdJLE1BQU07SUFDMUMsTUFBTUMsdUJBQXVCSixtQkFBbUJmLE1BQU0sQ0FBQyxDQUFDQyxLQUFLbUIsS0FBT25CLE1BQU1tQixHQUFHdEIsY0FBYyxFQUFFO0lBQzdGLE1BQU11Qix5QkFBeUJOLG1CQUFtQmYsTUFBTSxDQUFDLENBQUNDLEtBQUttQixLQUFPbkIsTUFBTW1CLEdBQUdqQixnQkFBZ0IsRUFBRTtJQUNqRyxNQUFNbUIsbUJBQW1CSCx1QkFBdUJFO0lBQ2hELE1BQU1FLGNBQWNSLG1CQUFtQkcsTUFBTSxHQUFHLElBQUlILG1CQUFtQmYsTUFBTSxDQUFDLENBQUNDLEtBQUttQixLQUFPbkIsTUFBTW1CLEdBQUdiLEdBQUcsRUFBRSxLQUFLUSxtQkFBbUJHLE1BQU0sR0FBRztJQUMxSSxNQUFNTSx3QkFBd0JWLFdBQVdkLE1BQU0sQ0FBQyxDQUFDQyxLQUFLd0IsSUFBTXhCLE1BQU93QixDQUFBQSxFQUFFakIsY0FBYyxJQUFJLElBQUk7SUFDM0YsTUFBTWtCLG9CQUFvQko7SUFFMUIsT0FBTztRQUNMTDtRQUNBRTtRQUNBRTtRQUNBQztRQUNBQztRQUNBQztRQUNBRTtJQUNGO0FBQ0YsRUFBRTtBQUVGLGFBQWE7QUFDTixNQUFNQyxpQkFBaUIsQ0FBQ3pCO0lBQzdCLE9BQU8sSUFBSTBCLEtBQUtDLFlBQVksQ0FBQyxTQUFTO1FBQ3BDQyxPQUFPO1FBQ1BDLFVBQVU7UUFDVkMsdUJBQXVCO0lBQ3pCLEdBQUdDLE1BQU0sQ0FBQy9CO0FBQ1osRUFBRTtBQUVGLGFBQWE7QUFDTixNQUFNZ0MsYUFBYSxDQUFDQztJQUN6QixPQUFPLElBQUlDLEtBQUtELFlBQVlFLGtCQUFrQixDQUFDO0FBQ2pELEVBQUU7QUFFRixrQkFBa0I7QUFDWCxNQUFNQyxtQkFBbUIsU0FBQ0M7UUFBZUMsNEVBQW1CO0lBQ2pFLE9BQU8sR0FBMkIsT0FBeEJELE1BQU1FLE9BQU8sQ0FBQ0QsV0FBVTtBQUNwQyxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvcnlvbWF0YWthaGFzaGkvYXBwMDEtMi9zcmMvdXRpbHMvbW9ja0RhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcGVydHksIFRyYW5zYWN0aW9uLCBBSVJlY29tbWVuZGF0aW9uLCBQcm9wZXJ0eUZpbmFuY2lhbHMsIERhc2hib2FyZE1ldHJpY3MsIEFjY291bnQgfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVByb3BlcnR5RmluYW5jaWFscyA9IChwcm9wZXJ0eTogUHJvcGVydHksIHRyYW5zYWN0aW9uczogVHJhbnNhY3Rpb25bXSk6IFByb3BlcnR5RmluYW5jaWFscyA9PiB7XG4gIGNvbnN0IHByb3BlcnR5VHJhbnNhY3Rpb25zID0gdHJhbnNhY3Rpb25zLmZpbHRlcih0ID0+IHQucHJvcGVydHlfaWQgPT09IHByb3BlcnR5LmlkKTtcbiAgXG4gIGNvbnN0IG1vbnRobHlfaW5jb21lID0gcHJvcGVydHlUcmFuc2FjdGlvbnNcbiAgICAuZmlsdGVyKHQgPT4gdC50eXBlID09PSAnaW5jb21lJylcbiAgICAucmVkdWNlKChzdW0sIHQpID0+IHN1bSArIHQuYW1vdW50LCAwKTtcbiAgXG4gIGNvbnN0IG1vbnRobHlfZXhwZW5zZXMgPSBwcm9wZXJ0eVRyYW5zYWN0aW9uc1xuICAgIC5maWx0ZXIodCA9PiB0LnR5cGUgPT09ICdleHBlbnNlJylcbiAgICAucmVkdWNlKChzdW0sIHQpID0+IHN1bSArIHQuYW1vdW50LCAwKTtcbiAgXG4gIGNvbnN0IGFubnVhbF9pbmNvbWUgPSBtb250aGx5X2luY29tZSAqIDEyO1xuICBjb25zdCBhbm51YWxfZXhwZW5zZXMgPSBtb250aGx5X2V4cGVuc2VzICogMTI7XG4gIGNvbnN0IG5ldF9wcm9maXQgPSBhbm51YWxfaW5jb21lIC0gYW5udWFsX2V4cGVuc2VzO1xuICBjb25zdCByb2kgPSBwcm9wZXJ0eS5wdXJjaGFzZV9wcmljZSA/IChuZXRfcHJvZml0IC8gcHJvcGVydHkucHVyY2hhc2VfcHJpY2UpICogMTAwIDogMDtcbiAgY29uc3Qgb2NjdXBhbmN5X3JhdGUgPSA5NTsgLy8gTW9jayBkYXRhXG5cbiAgLy8g6L+95Yqg44Gu6KiI566XXG4gIGNvbnN0IGNhc2hfZmxvdyA9IG1vbnRobHlfaW5jb21lIC0gbW9udGhseV9leHBlbnNlcztcbiAgY29uc3QgY2FwX3JhdGUgPSBwcm9wZXJ0eS5wdXJjaGFzZV9wcmljZSA/IChhbm51YWxfaW5jb21lIC8gcHJvcGVydHkucHVyY2hhc2VfcHJpY2UpICogMTAwIDogMDtcbiAgY29uc3QgYXBwcmVjaWF0aW9uX3JhdGUgPSAyLjU7IC8vIOW5tDIuNSXjga7kvqHmoLzkuIrmmIfjgpLmg7PlrppcblxuICByZXR1cm4ge1xuICAgIHByb3BlcnR5LFxuICAgIG1vbnRobHlfaW5jb21lLFxuICAgIG1vbnRobHlfZXhwZW5zZXMsXG4gICAgYW5udWFsX2luY29tZSxcbiAgICBhbm51YWxfZXhwZW5zZXMsXG4gICAgbmV0X3Byb2ZpdCxcbiAgICByb2ksXG4gICAgb2NjdXBhbmN5X3JhdGUsXG4gICAgY2FzaF9mbG93LFxuICAgIGNhcF9yYXRlLFxuICAgIGFwcHJlY2lhdGlvbl9yYXRlXG4gIH07XG59O1xuXG4vLyDjg4Djg4Pjgrfjg6Xjg5zjg7zjg4njg6Hjg4jjg6rjgq/jgrnjga7oqIjnrpdcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVEYXNoYm9hcmRNZXRyaWNzID0gKHByb3BlcnRpZXM6IFByb3BlcnR5W10sIHRyYW5zYWN0aW9uczogVHJhbnNhY3Rpb25bXSk6IERhc2hib2FyZE1ldHJpY3MgPT4ge1xuICBjb25zdCBwcm9wZXJ0eUZpbmFuY2lhbHMgPSBwcm9wZXJ0aWVzLm1hcChwcm9wZXJ0eSA9PiBnZW5lcmF0ZVByb3BlcnR5RmluYW5jaWFscyhwcm9wZXJ0eSwgdHJhbnNhY3Rpb25zKSk7XG4gIFxuICBjb25zdCB0b3RhbF9wcm9wZXJ0aWVzID0gcHJvcGVydGllcy5sZW5ndGg7XG4gIGNvbnN0IHRvdGFsX21vbnRobHlfaW5jb21lID0gcHJvcGVydHlGaW5hbmNpYWxzLnJlZHVjZSgoc3VtLCBwZikgPT4gc3VtICsgcGYubW9udGhseV9pbmNvbWUsIDApO1xuICBjb25zdCB0b3RhbF9tb250aGx5X2V4cGVuc2VzID0gcHJvcGVydHlGaW5hbmNpYWxzLnJlZHVjZSgoc3VtLCBwZikgPT4gc3VtICsgcGYubW9udGhseV9leHBlbnNlcywgMCk7XG4gIGNvbnN0IHRvdGFsX25ldF9wcm9maXQgPSB0b3RhbF9tb250aGx5X2luY29tZSAtIHRvdGFsX21vbnRobHlfZXhwZW5zZXM7XG4gIGNvbnN0IGF2ZXJhZ2Vfcm9pID0gcHJvcGVydHlGaW5hbmNpYWxzLmxlbmd0aCA+IDAgPyBwcm9wZXJ0eUZpbmFuY2lhbHMucmVkdWNlKChzdW0sIHBmKSA9PiBzdW0gKyBwZi5yb2ksIDApIC8gcHJvcGVydHlGaW5hbmNpYWxzLmxlbmd0aCA6IDA7XG4gIGNvbnN0IHRvdGFsX3BvcnRmb2xpb192YWx1ZSA9IHByb3BlcnRpZXMucmVkdWNlKChzdW0sIHApID0+IHN1bSArIChwLnB1cmNoYXNlX3ByaWNlIHx8IDApLCAwKTtcbiAgY29uc3QgbW9udGhseV9jYXNoX2Zsb3cgPSB0b3RhbF9uZXRfcHJvZml0O1xuXG4gIHJldHVybiB7XG4gICAgdG90YWxfcHJvcGVydGllcyxcbiAgICB0b3RhbF9tb250aGx5X2luY29tZSxcbiAgICB0b3RhbF9tb250aGx5X2V4cGVuc2VzLFxuICAgIHRvdGFsX25ldF9wcm9maXQsXG4gICAgYXZlcmFnZV9yb2ksXG4gICAgdG90YWxfcG9ydGZvbGlvX3ZhbHVlLFxuICAgIG1vbnRobHlfY2FzaF9mbG93XG4gIH07XG59O1xuXG4vLyDpgJrosqjjg5Xjgqnjg7zjg57jg4Pjg4jplqLmlbBcbmV4cG9ydCBjb25zdCBmb3JtYXRDdXJyZW5jeSA9IChhbW91bnQ6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gIHJldHVybiBuZXcgSW50bC5OdW1iZXJGb3JtYXQoJ2phLUpQJywge1xuICAgIHN0eWxlOiAnY3VycmVuY3knLFxuICAgIGN1cnJlbmN5OiAnSlBZJyxcbiAgICBtaW5pbXVtRnJhY3Rpb25EaWdpdHM6IDBcbiAgfSkuZm9ybWF0KGFtb3VudCk7XG59O1xuXG4vLyDml6Xku5jjg5Xjgqnjg7zjg57jg4Pjg4jplqLmlbBcbmV4cG9ydCBjb25zdCBmb3JtYXREYXRlID0gKGRhdGVTdHJpbmc6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIHJldHVybiBuZXcgRGF0ZShkYXRlU3RyaW5nKS50b0xvY2FsZURhdGVTdHJpbmcoJ2phLUpQJyk7XG59O1xuXG4vLyDjg5Hjg7zjgrvjg7Pjg4bjg7zjgrjjg5Xjgqnjg7zjg57jg4Pjg4jplqLmlbBcbmV4cG9ydCBjb25zdCBmb3JtYXRQZXJjZW50YWdlID0gKHZhbHVlOiBudW1iZXIsIGRlY2ltYWxzOiBudW1iZXIgPSAxKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGAke3ZhbHVlLnRvRml4ZWQoZGVjaW1hbHMpfSVgO1xufTsiXSwibmFtZXMiOlsiZ2VuZXJhdGVQcm9wZXJ0eUZpbmFuY2lhbHMiLCJwcm9wZXJ0eSIsInRyYW5zYWN0aW9ucyIsInByb3BlcnR5VHJhbnNhY3Rpb25zIiwiZmlsdGVyIiwidCIsInByb3BlcnR5X2lkIiwiaWQiLCJtb250aGx5X2luY29tZSIsInR5cGUiLCJyZWR1Y2UiLCJzdW0iLCJhbW91bnQiLCJtb250aGx5X2V4cGVuc2VzIiwiYW5udWFsX2luY29tZSIsImFubnVhbF9leHBlbnNlcyIsIm5ldF9wcm9maXQiLCJyb2kiLCJwdXJjaGFzZV9wcmljZSIsIm9jY3VwYW5jeV9yYXRlIiwiY2FzaF9mbG93IiwiY2FwX3JhdGUiLCJhcHByZWNpYXRpb25fcmF0ZSIsImNhbGN1bGF0ZURhc2hib2FyZE1ldHJpY3MiLCJwcm9wZXJ0aWVzIiwicHJvcGVydHlGaW5hbmNpYWxzIiwibWFwIiwidG90YWxfcHJvcGVydGllcyIsImxlbmd0aCIsInRvdGFsX21vbnRobHlfaW5jb21lIiwicGYiLCJ0b3RhbF9tb250aGx5X2V4cGVuc2VzIiwidG90YWxfbmV0X3Byb2ZpdCIsImF2ZXJhZ2Vfcm9pIiwidG90YWxfcG9ydGZvbGlvX3ZhbHVlIiwicCIsIm1vbnRobHlfY2FzaF9mbG93IiwiZm9ybWF0Q3VycmVuY3kiLCJJbnRsIiwiTnVtYmVyRm9ybWF0Iiwic3R5bGUiLCJjdXJyZW5jeSIsIm1pbmltdW1GcmFjdGlvbkRpZ2l0cyIsImZvcm1hdCIsImZvcm1hdERhdGUiLCJkYXRlU3RyaW5nIiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImZvcm1hdFBlcmNlbnRhZ2UiLCJ2YWx1ZSIsImRlY2ltYWxzIiwidG9GaXhlZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/mockData.ts\n"));

/***/ })

});